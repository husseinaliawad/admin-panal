name: Deploy to Production

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
    
    - name: Install dependencies
      run: composer install --no-dev --optimize-autoloader
    
    - name: Create deployment artifact
      run: |
        tar -czf deployment.tar.gz \
          --exclude='node_modules' \
          --exclude='.git' \
          --exclude='tests' \
          --exclude='storage/logs' \
          --exclude='storage/framework/cache' \
          --exclude='storage/framework/sessions' \
          --exclude='storage/framework/views' \
          .
    
    - name: Deploy to server
      uses: appleboy/ssh-action@v0.1.8
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        password: ${{ secrets.SERVER_PASSWORD }}
        port: ${{ secrets.SERVER_PORT }}
        script: |
          cd ${{ secrets.SERVER_PATH }}
          
          # Backup current deployment
          if [ -d "backup" ]; then rm -rf backup; fi
          mkdir backup
          cp -r . backup/ 2>/dev/null || true
          
          # Clear current files (keep storage and .env)
          find . -maxdepth 1 -not -name 'storage' -not -name '.env' -not -name 'backup' -not -name '.' -exec rm -rf {} +
          
    - name: Upload files
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        password: ${{ secrets.SERVER_PASSWORD }}
        port: ${{ secrets.SERVER_PORT }}
        source: "deployment.tar.gz"
        target: ${{ secrets.SERVER_PATH }}
        
    - name: Extract and setup
      uses: appleboy/ssh-action@v0.1.8
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        password: ${{ secrets.SERVER_PASSWORD }}
        port: ${{ secrets.SERVER_PORT }}
        script: |
          cd ${{ secrets.SERVER_PATH }}
          
          # Extract files
          tar -xzf deployment.tar.gz
          rm deployment.tar.gz
          
          # Set permissions
          chmod -R 775 storage
          chmod -R 775 bootstrap/cache
          
          # Clear and cache
          php artisan config:clear
          php artisan route:clear
          php artisan view:clear
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache
          
          # Create storage link
          php artisan storage:link
          
          echo "âœ… Deployment completed successfully!" 